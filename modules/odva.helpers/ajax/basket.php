<?php
//подключаем пролог битрикса(без этого не будуд рабботать основые функций битрикса)
require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/prolog_before.php");

//проверяю пришло ли вообще какое не будь действие над корзиной и проверяю входит ли оно в список доступных действий
if(empty($_GET['action']) || !in_array($_GET['action'], ['add', 'chg', 'get', 'delete']))
{
	//если нет то формирую ответ с ошибкой и выхожу из скрипта
	echo json_encode([
		'success' => false,
		'error'   => [
			'type' => 'param',
			'msg'  => 'Необходимо передать параметр action. Возможные значения add'
		]
	]);
	return;
}

//если пришло действие добавление в корзину то
if($_GET['action'] == 'add')
{
	//проверяю пустое ли id товара и не меньше или равно нулю оно
	if(empty($_GET['productId']) || $_GET['productId'] <= 0)
	{
		//если условие верно то формирую ответ с ошибкой и прекращаю выполнять скрипт
		echo json_encode(['success' => false, 'error' => ['type' => 'param', 'msg' => 'Не передан параметр productId']]);
		exit();
	}

	//проверяю пришло ли добавляемое количество товара в корзину и если пришло не меньне или равно нулю оно
	if(empty(intval($_GET['quantity'])) || intval($_GET['quantity']) <= 0)
	{
		//если количество не пришло или оно меньше 0 или равно 0 то
		//делаю количество равным 1 и присвайваю его переменной $quantity
		$quantity = 1;
	}
	else
	{
		//иначе пришедшее количество конвертировать в целое число и привоейть его переменной $quantity
		$quantity = intval($_GET['quantity']);
	}

	//выполняю метод добавляющий товар в корзину и сохраняю результат
	//принимаемые параметры
	//$productId - id товара(елемента инфоблока)
	//$quantity - добавляемое количество товара
	$adding = \Odva\Helpers\Basket::addItem($productId, $quantity);

	//проверяю успешно ли выполнилось добавление товара в корзину
	if(!$adding->isSuccess())
	{
		//если нет то формирую ответ с ошибкой и прекращаю работу скрипта
		echo json_encode([
			'success' => false,
			'error' => [
				'type' => 'bitrix',
				'msg' => 'Не удалось добавить товар в корзину'
			]
		]);
		exit();
	}

	//если добавление выполнилось успешно то формирую ответ со следующйими параметрами
	//success - статус выполнения
	//count - текущее количестов товаров в корзине
	//productId - id товара(елемента инфоблока)
	echo json_encode(['success' => true, 'count' => \Odva\Helpers\Basket::getCount(),'productId' => $productId]);
}

//если пришло действие изменение товара в корзине то
if($_GET['action'] == 'chg')
{
	//проверяю пустое ли id товара и не меньше или равно нулю оно
	if(empty($_GET['productId']) || $_GET['productId'] <= 0)
	{
		//если условие верно то формирую ответ с ошибкой и прекращаю выполнять скрипт
		echo json_encode(['success' => false, 'error' => ['type' => 'param', 'msg' => 'Не передан параметр productId']]);
		exit();
	}
	//проверяю пришло количество для изменения товара в корзине и если пришло не меньне или равно нулю оно
	if(empty(intval($_GET['quantity'])) || intval($_GET['quantity']) <= 0)
	{
		//если количество не пришло или оно меньше 0 или равно 0 то
		//делаю количество равным 1 и присвайваю его переменной $quantity
		$quantity = 1;
	}
	else
	{
		//иначе пришедшее количество конвертировать в целое число и привоейть его переменной $quantity
		$quantity = intval($_GET['quantity']);
	}
	//выполняю метод изменяющий товар в корзине и сохраняю результат
	//принимаемые параметры
	//$productId - id товара(елемента инфоблока)
	//$quantity - на какое количество изменить количество товара в корзине
	$adding = \Odva\Helpers\Basket::changeItem($productId, $quantity);

	//проверяю успешно ли выполнилось изменение товара в корзине
	if(!$adding->isSuccess())
	{
		//если нет то формирую ответ с ошибкой и прекращаю работу скрипта
		echo json_encode([
			'success' => false,
			'error' => [
				'type' => 'bitrix',
				'msg' => 'Не удалось изменить кооличество товара в корзине'
			]
		]);
		exit();
	}
	//если изменение выполнилось успешно то формирую ответ со следующйими параметрами
	//success - статус выполнения
	//count - текущее количестов товаров в корзине
	echo json_encode(['success' => true, 'count' => \Odva\Helpers\Basket::getCount()]);
}

//если пришло действие удаление товара из корзины то
if($_GET['action'] == 'delete')
{
	//проверяю пустое ли id елемента корзины и не меньше или равно нулю оно
	if(empty($_GET['itemId']) || $_GET['itemId'] <= 0)
	{
		//если условие верно то формирую ответ с ошибкой и прекращаю выполнять скрипт
		echo json_encode(['success' => false, 'error' => ['type' => 'param', 'msg' => 'Не передан параметр itemId']]);
		exit();
	}

	//выполняю метод удаляющий товар из корзины и сохраняю результат
	//принимаемые параметры
	//$itemId - id елемента корзины
	$adding = \Odva\Helpers\Basket::deleteItem($itemId);

	//проверяю успешно ли выполнилось уделние товара из корзины
	if(!$adding->isSuccess())
	{
		//если нет то формирую ответ с ошибкой и прекращаю работу скрипта
		echo json_encode([
			'success' => false,
			'error' => [
				'type' => 'bitrix',
				'msg' => 'Не удалось удалить товар из корзины'
			]
		]);
		exit();
	}

	//если удаление выполнилось успешно то формирую ответ со следующйими параметрами
	//success - статус выполнения
	//count - текущее количестов товаров в корзине
	echo json_encode(['success' => true, 'count' => \Odva\Helpers\Basket::getCount()]);
}